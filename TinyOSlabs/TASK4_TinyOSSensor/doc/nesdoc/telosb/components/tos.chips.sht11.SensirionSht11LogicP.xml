<?xml version="1.0" ?><component abstract="" loc="53:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>
 SensirionSht11LogicP contains the actual driver logic needed to
 read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>
 SensirionSht11LogicP contains the actual driver logic needed to
 read from the Sensirion SHT11 temperature/humidity sensor. It
 depends on 2 underlying GeneralIO interfaces, one for the data pin
 and one for the clock pin, and one underlying GpioInterrupt.  It
 provides the HAL-level SensirionSht11 interface. It's generic, so
 you can instantiate it multiple times if you have more than one
 Sensirion SHT11 attached to a node. 
 
 &lt;p&gt;
 This code assumes that the MCU clock is less than 10 MHz.  If you
 ever run this on a faster MCU, you'll need to insert a lot of
 waits to keep the Sensirion happy.

 @author Gilman Tolle &lt;gtolle@archrock.com&gt;
 @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $
</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    <specification><interface loc="58:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="InterruptDATA" provided="0" ref="0x7f4ee6ca0c10">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="InterruptDATA" ref="0x7f4ee6ca0c10" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.GpioInterrupt" qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" ref="0x7f4ee6ca3020" scoped=""/>
        <function-ref name="disable" ref="0x7f4ee6ca31b0" scoped=""/>
        <function-ref name="enableFallingEdge" ref="0x7f4ee6ca3340" scoped=""/>
        <function-ref name="enableRisingEdge" ref="0x7f4ee6ca34d0" scoped=""/>
      </interface-functions>
    </interface><interface loc="102:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="readSensor" provided="0" ref="0x7f4ee6c8e980">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="readSensor" ref="0x7f4ee6c8e980" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.TaskBasic" qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" ref="0x7f4ee6c8ed00" scoped=""/>
        <function-ref name="runTask" ref="0x7f4ee6c8d020" scoped=""/>
      </interface-functions>
    </interface><interface loc="103:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="signalStatusDone" provided="0" ref="0x7f4ee6c8da10">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="signalStatusDone" ref="0x7f4ee6c8da10" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.TaskBasic" qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" ref="0x7f4ee6c8dd90" scoped=""/>
        <function-ref name="runTask" ref="0x7f4ee6c8b020" scoped=""/>
      </interface-functions>
    </interface><interface loc="57:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="CLOCK" provided="0" ref="0x7f4ee6ca5020">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="CLOCK" ref="0x7f4ee6ca5020" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.GeneralIO" qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" ref="0x7f4ee6ca53a0" scoped=""/>
        <function-ref name="isInput" ref="0x7f4ee6ca5530" scoped=""/>
        <function-ref name="toggle" ref="0x7f4ee6ca56c0" scoped=""/>
        <function-ref name="isOutput" ref="0x7f4ee6ca5850" scoped=""/>
        <function-ref name="get" ref="0x7f4ee6ca59e0" scoped=""/>
        <function-ref name="makeOutput" ref="0x7f4ee6ca5b70" scoped=""/>
        <function-ref name="set" ref="0x7f4ee6ca5d00" scoped=""/>
        <function-ref name="clr" ref="0x7f4ee6ca4020" scoped=""/>
      </interface-functions>
    </interface><interface loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="SensirionSht11" provided="1" ref="0x7f4ee6ca9750">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="SensirionSht11" ref="0x7f4ee6ca9750" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.chips.sht11.SensirionSht11" qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
          <typename><typedef-ref name="uint8_t" ref="0x7f4ee870c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" ref="0x7f4ee6ca9ad0" scoped=""/>
        <function-ref name="readStatusReg" ref="0x7f4ee6ca9c60" scoped=""/>
        <function-ref name="measureHumidity" ref="0x7f4ee6ca9df0" scoped=""/>
        <function-ref name="measureTemperature" ref="0x7f4ee6ca8020" scoped=""/>
        <function-ref name="writeStatusReg" ref="0x7f4ee6ca81b0" scoped=""/>
        <function-ref name="reset" ref="0x7f4ee6ca8340" scoped=""/>
        <function-ref name="writeStatusRegDone" ref="0x7f4ee6ca84d0" scoped=""/>
        <function-ref name="readStatusRegDone" ref="0x7f4ee6ca8660" scoped=""/>
        <function-ref name="resetDone" ref="0x7f4ee6ca87f0" scoped=""/>
        <function-ref name="measureTemperatureDone" ref="0x7f4ee6ca8980" scoped=""/>
      </interface-functions>
    </interface><interface loc="56:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="DATA" provided="0" ref="0x7f4ee6ca8ce0">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="DATA" ref="0x7f4ee6ca8ce0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.GeneralIO" qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" ref="0x7f4ee6ca60a0" scoped=""/>
        <function-ref name="isInput" ref="0x7f4ee6ca6230" scoped=""/>
        <function-ref name="toggle" ref="0x7f4ee6ca63c0" scoped=""/>
        <function-ref name="isOutput" ref="0x7f4ee6ca6550" scoped=""/>
        <function-ref name="get" ref="0x7f4ee6ca66e0" scoped=""/>
        <function-ref name="makeOutput" ref="0x7f4ee6ca6870" scoped=""/>
        <function-ref name="set" ref="0x7f4ee6ca6a00" scoped=""/>
        <function-ref name="clr" ref="0x7f4ee6ca6b90" scoped=""/>
      </interface-functions>
    </interface><interface loc="62:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="Leds" provided="0" ref="0x7f4ee6c9cc00">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Leds" ref="0x7f4ee6c9cc00" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" ref="0x7f4ee6c9b020" scoped=""/>
        <function-ref name="led0Toggle" ref="0x7f4ee6c9b1b0" scoped=""/>
        <function-ref name="led1On" ref="0x7f4ee6c9b340" scoped=""/>
        <function-ref name="led1Toggle" ref="0x7f4ee6c9b4d0" scoped=""/>
        <function-ref name="led2Toggle" ref="0x7f4ee6c9b660" scoped=""/>
        <function-ref name="get" ref="0x7f4ee6c9b7f0" scoped=""/>
        <function-ref name="led1Off" ref="0x7f4ee6c9b980" scoped=""/>
        <function-ref name="led2Off" ref="0x7f4ee6c9a020" scoped=""/>
        <function-ref name="set" ref="0x7f4ee6c9bb10" scoped=""/>
        <function-ref name="led0On" ref="0x7f4ee6c9bca0" scoped=""/>
        <function-ref name="led2On" ref="0x7f4ee6c9be30" scoped=""/>
      </interface-functions>
    </interface><interface loc="60:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" name="Timer" provided="0" ref="0x7f4ee6ca3900">
      <component-ref nicename="tos.chips.sht11.SensirionSht11LogicP" qname="SensirionSht11LogicP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Timer" ref="0x7f4ee6ca3900" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7f4ee77f1160"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4ee77f18d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x7f4ee6c9de80" scoped=""/>
        <function-ref name="fired" ref="0x7f4ee6c9f4a0" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x7f4ee6c9d260" scoped=""/>
        <function-ref name="isOneShot" ref="0x7f4ee6c9fda0" scoped=""/>
        <function-ref name="getdt" ref="0x7f4ee6c9c7a0" scoped=""/>
        <function-ref name="gett0" ref="0x7f4ee6c9c320" scoped=""/>
        <function-ref name="isRunning" ref="0x7f4ee6c9f920" scoped=""/>
        <function-ref name="startPeriodic" ref="0x7f4ee6ca2560" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x7f4ee6c9d870" scoped=""/>
        <function-ref name="startOneShot" ref="0x7f4ee6ca2a30" scoped=""/>
        <function-ref name="stop" ref="0x7f4ee6c9f020" scoped=""/>
      </interface-functions>
    </interface></specification><referenced/></component>