<?xml version="1.0" ?><component loc="41:/opt/tinyos-2.1.2/tos/chips/msp430/timer/CounterMilli32C.nc" nicename="tos.chips.msp430.timer.CounterMilli32C" qname="CounterMilli32C">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>
 CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>
 CounterMilli32C provides at 32-bit counter at 1024 ticks per second.

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
 @see  Please refer to TEP 102 for more information about this component and its
          intended use.
</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="50:/opt/tinyos-2.1.2/tos/chips/msp430/timer/CounterMilli32C.nc">
          <from><interface-ref name="Counter" ref="0x7fcf8fd728c0" scoped=""/></from>
          <to><interface-ref name="Counter" ref="0x7fcf8fd54cf0" scoped=""/></to>
        </wire>
        <wire loc="52:/opt/tinyos-2.1.2/tos/chips/msp430/timer/CounterMilli32C.nc">
          <from><interface-ref name="CounterFrom" ref="0x7fcf8fd360f0" scoped=""/></from>
          <to><interface-ref name="Msp430Counter32khz" ref="0x7fcf8fd708e0" scoped=""/></to>
        </wire>
      </wiring>
    <specification><interface loc="43:/opt/tinyos-2.1.2/tos/chips/msp430/timer/CounterMilli32C.nc" name="Counter" provided="1" ref="0x7fcf8fd728c0">
      <component-ref nicename="tos.chips.msp430.timer.CounterMilli32C" qname="CounterMilli32C"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Counter" ref="0x7fcf8fd728c0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Counter" qname="Counter"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7fcf90355ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fcf9017a260"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x7fcf9126f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x7fcf8fd75700" scoped=""/>
        <function-ref name="clearOverflow" ref="0x7fcf8fd710d0" scoped=""/>
        <function-ref name="isOverflowPending" ref="0x7fcf8fd75bc0" scoped=""/>
        <function-ref name="overflow" ref="0x7fcf8fd71590" scoped=""/>
      </interface-functions>
    </interface></specification><referenced><interface loc="43:/opt/tinyos-2.1.2/tos/chips/msp430/timer/Msp430Counter32khzC.nc" name="Msp430Counter32khz" provided="1" ref="0x7fcf8fd708e0">
      <component-ref nicename="tos.chips.msp430.timer.Msp430Counter32khzC" qname="Msp430Counter32khzC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Msp430Counter32khz" ref="0x7fcf8fd708e0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Counter" qname="Counter"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7fcf9017a6a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fcf9017aa10"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x7fcf9126f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x7fcf8fd6d780" scoped=""/>
        <function-ref name="clearOverflow" ref="0x7fcf8fd6c150" scoped=""/>
        <function-ref name="isOverflowPending" ref="0x7fcf8fd6dc40" scoped=""/>
        <function-ref name="overflow" ref="0x7fcf8fd6c610" scoped=""/>
      </interface-functions>
    </interface><interface loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" name="Counter" provided="1" ref="0x7fcf8fd54cf0">
      <component-ref nicename="tos.lib.timer.TransformCounterC" qname="CounterMilli32C.Transform"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Counter" ref="0x7fcf8fd54cf0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Counter" qname="Counter"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7fcf90355ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fcf9017a260"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x7fcf9126f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x7fcf8fd39b60" scoped=""/>
        <function-ref name="clearOverflow" ref="0x7fcf8fd38550" scoped=""/>
        <function-ref name="isOverflowPending" ref="0x7fcf8fd38090" scoped=""/>
        <function-ref name="overflow" ref="0x7fcf8fd38a10" scoped=""/>
      </interface-functions>
    </interface><interface loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" name="CounterFrom" provided="0" ref="0x7fcf8fd360f0">
      <component-ref nicename="tos.lib.timer.TransformCounterC" qname="CounterMilli32C.Transform"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="CounterFrom" ref="0x7fcf8fd360f0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Counter" qname="Counter"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7fcf9017a6a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fcf9017aa10"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x7fcf9126f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" ref="0x7fcf8fd35020" scoped=""/>
        <function-ref name="clearOverflow" ref="0x7fcf8fd359a0" scoped=""/>
        <function-ref name="isOverflowPending" ref="0x7fcf8fd354e0" scoped=""/>
        <function-ref name="overflow" ref="0x7fcf8fd35e60" scoped=""/>
      </interface-functions>
    </interface><component loc="54(CounterMilli32C.Transform):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" nicename="tos.lib.timer.TransformCounterC" qname="CounterMilli32C.Transform">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>
 TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>
 TransformCounterC decreases precision and/or widens an Counter.

 &lt;p&gt;See TEP102 for more details.

 @param to_precision_tag A type indicating the precision of the transformed
   Counter.
 @param to_size_type The type for the width of the transformed Counter.
 @param from_precision_tag A type indicating the precision of the original
   Counter.
 @param from_size_type The type for the width of the original Counter.
 @param bit_shift_right Original time units will be 2 to the power 
   &lt;code&gt;bit_shift_right&lt;/code&gt; larger than transformed time units.
 @param upper_count_type A type large enough to store the upper bits --
   those needed above from_size_type after its shift right to fill
   to_size_type.

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
</long>
      </documentation>
      <instance number="0">
        <component-ref nicename="tos.lib.timer.TransformCounterC" qname="TransformCounterC"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7fcf90355ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fcf9017a260"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x7fcf9126f920"/></typename>
          </type-int>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x7fcf9017a6a0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fcf9017aa10"/></typename>
          </type-tag>
          <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned="">
            <typename><typedef-ref name="uint16_t" ref="0x7fcf9126f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int alignment="I:2" cname="int" size="I:2"/>
          </value>
          <type-int alignment="I:2" cname="unsigned long" size="I:4" unsigned="">
            <typename><typedef-ref name="uint32_t" ref="0x7fcf9126f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component><component loc="41:/opt/tinyos-2.1.2/tos/chips/msp430/timer/Msp430Counter32khzC.nc" nicename="tos.chips.msp430.timer.Msp430Counter32khzC" qname="Msp430Counter32khzC">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>
 Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>
 Msp430Counter32khC provides the standard 32khz counter for the MSP430.

 @author Cory Sharp &lt;cssharp@eecs.berkeley.edu&gt;
 @see  Please refer to TEP 102 for more information about this component and its
          intended use.
</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="50:/opt/tinyos-2.1.2/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
          <from><interface-ref name="Msp430Counter32khz" ref="0x7fcf8fd708e0" scoped=""/></from>
          <to><interface-ref name="Counter" ref="0x7fcf8fd69b80" scoped=""/></to>
        </wire>
        <wire loc="51:/opt/tinyos-2.1.2/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
          <from><interface-ref name="Msp430Timer" ref="0x7fcf8fd5ac50" scoped=""/></from>
          <to><interface-ref name="TimerB" ref="0x7fcf902bfb70" scoped=""/></to>
        </wire>
      </wiring>
    </component></referenced></component>